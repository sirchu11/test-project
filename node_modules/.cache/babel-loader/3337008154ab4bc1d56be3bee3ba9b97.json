{"ast":null,"code":"var _jsxFileName = \"/Users/curtis.zhan/Desktop/test-project/src/components/test2/Checkbox.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport Logo from '../common/Logo';\nimport { CHECKBOX_OPTIONS } from './checkboxDate';\nimport './checkbox.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Checkbox() {\n  _s();\n\n  const [checkedShift, setCheckedShift] = useState({\n    bigNum: null,\n    smallNum: null\n  });\n\n  const checkHandle = e => {\n    let clickShift = e.nativeEvent.shiftKey;\n    let currentNum = Number(e.target.name.substr(9));\n\n    if (clickShift) {\n      setCheckedShift(state => ({\n        bigNum: currentNum >= state.bigNum || currentNum >= state.smallNum ? currentNum : state.bigNum,\n        smallNum: state.smallNum ? currentNum >= state.smallNum ? state.smallNum : currentNum : state.bigNum\n      }));\n    }\n  };\n\n  const switchCheckbox = (bigNum, smallNum) => {\n    for (let i = 1; i <= 10; i++) {\n      let checkbox = document.querySelector(`input[name=checkbox-${i}]`);\n\n      if (i > bigNum || i < smallNum) {\n        if (checkbox) checkbox.checked = false;\n      } else {\n        if (checkbox) checkbox.checked = true;\n      }\n    }\n  }; // Shift checkbox\n\n\n  useEffect(() => {\n    if (checkedShift.smallNum) {\n      switchCheckbox(checkedShift.bigNum, checkedShift.smallNum, checkedShift.isbetween);\n    }\n  }, [checkedShift]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"checkbox-main\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"checkbox-header\",\n      children: /*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"checkbox-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"checkbox-content-title\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"content-input\",\n          type: \"checkbox\",\n          name: \"checkbox-0\",\n          onChange: checkHandle,\n          disabled: \"disabled\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"content-text\",\n          children: \"\\u72C0\\u614B\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this), CHECKBOX_OPTIONS.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"checkbox-content-box\",\n        children: [item.visible && /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"content-input\",\n          type: \"checkbox\",\n          name: item.name,\n          onChange: checkHandle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 38\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"content-text\",\n          children: item.label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 17\n        }, this)]\n      }, item.key, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Checkbox, \"3lh6XVJQ5ZK8nLgb0aSADUuJmDg=\");\n\n_c = Checkbox;\n\nvar _c;\n\n$RefreshReg$(_c, \"Checkbox\");","map":{"version":3,"sources":["/Users/curtis.zhan/Desktop/test-project/src/components/test2/Checkbox.jsx"],"names":["useState","useEffect","Logo","CHECKBOX_OPTIONS","Checkbox","checkedShift","setCheckedShift","bigNum","smallNum","checkHandle","e","clickShift","nativeEvent","shiftKey","currentNum","Number","target","name","substr","state","switchCheckbox","i","checkbox","document","querySelector","checked","isbetween","map","item","visible","label","key"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,IAAP,MAAiB,gBAAjB;AACA,SAASC,gBAAT,QAAiC,gBAAjC;AACA,OAAO,gBAAP;;AAEA,eAAe,SAASC,QAAT,GAAoB;AAAA;;AAC/B,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCN,QAAQ,CAAC;AAC7CO,IAAAA,MAAM,EAAE,IADqC;AAE7CC,IAAAA,QAAQ,EAAE;AAFmC,GAAD,CAAhD;;AAIA,QAAMC,WAAW,GAAIC,CAAD,IAAO;AACvB,QAAIC,UAAU,GAAGD,CAAC,CAACE,WAAF,CAAcC,QAA/B;AACA,QAAIC,UAAU,GAAGC,MAAM,CAACL,CAAC,CAACM,MAAF,CAASC,IAAT,CAAcC,MAAd,CAAqB,CAArB,CAAD,CAAvB;;AACA,QAAGP,UAAH,EAAe;AACXL,MAAAA,eAAe,CAAEa,KAAD,KAAY;AACxBZ,QAAAA,MAAM,EAAEO,UAAU,IAAIK,KAAK,CAACZ,MAApB,IAA8BO,UAAU,IAAIK,KAAK,CAACX,QAAlD,GAA4DM,UAA5D,GAAyEK,KAAK,CAACZ,MAD/D;AAExBC,QAAAA,QAAQ,EAAEW,KAAK,CAACX,QAAN,GAAiBM,UAAU,IAAIK,KAAK,CAACX,QAApB,GAAgCW,KAAK,CAACX,QAAtC,GAA+CM,UAAhE,GAA6EK,KAAK,CAACZ;AAFrE,OAAZ,CAAD,CAAf;AAIH;AACJ,GATD;;AAUA,QAAMa,cAAc,GAAG,CAACb,MAAD,EAASC,QAAT,KAAsB;AACzC,SAAI,IAAIa,CAAC,GAAG,CAAZ,EAAeA,CAAC,IAAI,EAApB,EAAwBA,CAAC,EAAzB,EAA6B;AACzB,UAAIC,QAAQ,GAAGC,QAAQ,CAACC,aAAT,CAAwB,uBAAsBH,CAAE,GAAhD,CAAf;;AACA,UAAGA,CAAC,GAAEd,MAAH,IAAac,CAAC,GAAGb,QAApB,EAA8B;AAC1B,YAAGc,QAAH,EAAaA,QAAQ,CAACG,OAAT,GAAmB,KAAnB;AAChB,OAFD,MAEK;AACD,YAAGH,QAAH,EAAaA,QAAQ,CAACG,OAAT,GAAmB,IAAnB;AAChB;AACJ;AACJ,GATD,CAf+B,CAyB/B;;;AACAxB,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAGI,YAAY,CAACG,QAAhB,EAAyB;AACrBY,MAAAA,cAAc,CAACf,YAAY,CAACE,MAAd,EAAsBF,YAAY,CAACG,QAAnC,EAA6CH,YAAY,CAACqB,SAA1D,CAAd;AACH;AACJ,GAJQ,EAIN,CAACrB,YAAD,CAJM,CAAT;AAMA,sBACA;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA,6BACI,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAII;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,wBAAf;AAAA,gCACI;AAAO,UAAA,SAAS,EAAC,eAAjB;AAAiC,UAAA,IAAI,EAAC,UAAtC;AAAiD,UAAA,IAAI,EAAC,YAAtD;AAAmE,UAAA,QAAQ,EAAII,WAA/E;AAA4F,UAAA,QAAQ,EAAC;AAArG;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAG,UAAA,SAAS,EAAC,cAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAKKN,gBAAgB,CAACwB,GAAjB,CAAsBC,IAAD,iBAClB;AAAK,QAAA,SAAS,EAAC,sBAAf;AAAA,mBACKA,IAAI,CAACC,OAAL,iBAAgB;AAAO,UAAA,SAAS,EAAC,eAAjB;AAAiC,UAAA,IAAI,EAAC,UAAtC;AAAiD,UAAA,IAAI,EAAED,IAAI,CAACX,IAA5D;AAAkE,UAAA,QAAQ,EAAIR;AAA9E;AAAA;AAAA;AAAA;AAAA,gBADrB,eAEA;AAAG,UAAA,SAAS,EAAC,cAAb;AAAA,oBAA6BmB,IAAI,CAACE;AAAlC;AAAA;AAAA;AAAA;AAAA,gBAFA;AAAA,SAA2CF,IAAI,CAACG,GAAhD;AAAA;AAAA;AAAA;AAAA,cADH,CALL;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADA;AAmBH;;GAnDuB3B,Q;;KAAAA,Q","sourcesContent":["import { useState, useEffect } from 'react';\nimport Logo from '../common/Logo';\nimport { CHECKBOX_OPTIONS } from './checkboxDate';\nimport './checkbox.css';\n\nexport default function Checkbox() {\n    const [checkedShift, setCheckedShift] = useState({\n        bigNum: null,\n        smallNum: null\n    });\n    const checkHandle = (e) => {\n        let clickShift = e.nativeEvent.shiftKey;\n        let currentNum = Number(e.target.name.substr(9));\n        if(clickShift) {\n            setCheckedShift((state) => ({\n                bigNum: currentNum >= state.bigNum || currentNum >= state.smallNum ?currentNum : state.bigNum,\n                smallNum: state.smallNum ? currentNum >= state.smallNum  ? state.smallNum:currentNum : state.bigNum}\n            ));\n        }\n    };\n    const switchCheckbox = (bigNum, smallNum) => {\n        for(let i = 1; i <= 10; i++) {\n            let checkbox = document.querySelector(`input[name=checkbox-${i}]`);\n            if(i> bigNum || i < smallNum) {\n                if(checkbox) checkbox.checked = false;\n            }else{\n                if(checkbox) checkbox.checked = true;\n            }\n        }\n    };\n    // Shift checkbox\n    useEffect(() => {\n        if(checkedShift.smallNum){\n            switchCheckbox(checkedShift.bigNum, checkedShift.smallNum, checkedShift.isbetween);\n        }\n    }, [checkedShift]);\n\n    return (\n    <div className=\"checkbox-main\">\n        <div className=\"checkbox-header\">\n            <Logo/>\n        </div>\n        <div className=\"checkbox-content\">\n            <div className=\"checkbox-content-title\">\n                <input className=\"content-input\" type=\"checkbox\" name=\"checkbox-0\" onChange = {checkHandle} disabled=\"disabled\"/>\n                <p className=\"content-text\">狀態</p>\n            </div>\n            {CHECKBOX_OPTIONS.map((item) => (\n                <div className=\"checkbox-content-box\" key={item.key}>\n                    {item.visible && <input className=\"content-input\" type=\"checkbox\" name={item.name} onChange = {checkHandle}/>}\n                <p className=\"content-text\">{item.label}</p>\n                </div>\n            ))}\n        </div>\n    </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}